{"version":3,"sources":["assets/images/instagram-text-logo.jpg","assets/images/spinner.jpg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/profileActions.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/postReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/post/PostHeader.js","components/post/PostFooter.js","components/post/Post.js","components/utils/Spinner.js","components/Homepage.js","actions/postActions.js","components/post/CreatePost.js","components/post/Comments.js","components/profile/ProfilePost.js","components/profile/ProfileHeader.js","components/profile/Profile.js","components/profile/ProfileUpdate.js","components/auth/Login.js","actions/errorActions.js","components/auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","setProfileLoading","setProfileLoaded","clearCurrentProfile","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","profile","loading","post","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navbar","props","handleLogout","e","preventDefault","history","push","handleSearchTermChange","setState","showSearchInput","body","searchTerm","target","then","res","matchingUsers","data","catch","console","log","handleSearchItemClicked","$","val","username","this","className","style","marginBottom","to","src","InstagramTextLogo","alt","height","autoComplete","name","onChange","id","placeholder","aria-label","avatar","width","onClick","cursor","map","key","Component","connect","PostHeader","backgroundColor","location","PostFooter","handleLike","likes","toggleLike","response","handleDislike","findUserLike","filter","like","postDate","moment","date","fromNow","_id","description","comments","Post","padding","imageUrl","Spinner","spinner","marginTop","Homepage","posts","get","setPostLoading","setPostLoaded","CreatePost","readUrl","files","reader","FileReader","onload","attr","result","readAsDataURL","file","onSubmit","FormData","append","createPost","nextProps","pageContent","classnames","ref","htmlFor","postData","err","withRouter","Comments","newComment","text","comment","params","match","postId","ProfilePost","ProfileHeader","currentUser","marginRight","fontSize","website","href","bio","Profile","getUserProfile","ProfileUpdate","newProfile","updateUserProfile","setCurrentImage","handlePhotoRemoval","removeUserProfilePicture","handlePhotoUpload","updateUserProfilePicture","getCurrentUserProfile","Login","email","password","loginUser","userData","setItem","jwt_decode","Register","newUser","password2","registerUser","jwtToken","currentTime","Date","now","exp","window","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4be1bf24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagram-text-logo.801627c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.b2c6a101.jpg\";","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport {clearErrors} from './errorActions';\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post('/api/users/register', userData)\r\n    .then(res => history.push('/login'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post('/api/users/login', userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem('jwtToken', token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user and clear errors if any\r\n      dispatch(setCurrentUser(decoded));\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem('jwtToken');\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_CURRENT_USER_PROFILE = 'GET_CURRENT_USER_PROFILE';\r\n\r\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE';\r\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\r\nexport const PROFILE_LOADED = 'PROFILE_LOADED';\r\nexport const PROFILE_NOT_FOUND = 'PROFILE_NOT_FOUND';\r\nexport const CLEAR_CURRENT_PROFILE = 'CLEAR_CURRENT_PROFILE';\r\n\r\nexport const POST_LOADING = 'POST_LOADING';\r\nexport const POST_LOADED = 'POST_LOADED';\r\n\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    GET_USER_PROFILE,\r\n    GET_CURRENT_USER_PROFILE,\r\n    PROFILE_LOADING,\r\n    PROFILE_LOADED,\r\n    CLEAR_CURRENT_PROFILE,\r\n    GET_ERRORS\r\n} from './types';\r\n\r\n// Get current profile\r\nexport const getCurrentUserProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_CURRENT_USER_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Get user profile\r\nexport const getUserProfile = (username) => dispatch => {\r\n\r\n    dispatch(setProfileLoading());\r\n\r\n    axios\r\n      .get(`/api/profile/${username}`)\r\n      .then(res =>\r\n        dispatch({\r\n          type: GET_USER_PROFILE,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  }; \r\n\r\n  export const updateUserProfile = (newProfile, history) => dispatch => {\r\n\r\n    dispatch(setProfileLoading());\r\n\r\n    axios.post('/api/profile/update', newProfile)\r\n      .then(res => {\r\n        const {username} = res.data.user;\r\n        history.push(`/profile/${username}`);\r\n      })\r\n      .catch(err => {\r\n\r\n        dispatch(setProfileLoaded());\r\n\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n    );\r\n  \r\n  }\r\n\r\n  export const updateUserProfilePicture = (data, history) => dispatch => {\r\n\r\n    dispatch(setProfileLoading());\r\n\r\n    axios.post('/api/profile/profile_picture/upload',data)\r\n      .then(res => {\r\n        const {username} = res.data;\r\n        history.push(`/profile/${username}`);\r\n      })\r\n      .catch(err => {\r\n\r\n        dispatch(setProfileLoaded());\r\n\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n    );\r\n  \r\n  }\r\n\r\n  export const removeUserProfilePicture = (history) => dispatch => {\r\n\r\n    dispatch(setProfileLoading());\r\n\r\n    axios.post('/api/profile/profile_picture/remove')\r\n      .then(res => {\r\n        const {username} = res.data;\r\n        history.push(`/profile/${username}`);\r\n      })\r\n      .catch(err => {\r\n\r\n        dispatch(setProfileLoaded());\r\n\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n    );\r\n  \r\n  }\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Profile loaded\r\nexport const setProfileLoaded = () => {\r\n  return {\r\n    type: PROFILE_LOADED\r\n  };\r\n};\r\n\r\n// Clear profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from '../validation/is-empty';\r\n\r\nimport { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    GET_USER_PROFILE,\r\n    GET_CURRENT_USER_PROFILE,\r\n    PROFILE_LOADING,\r\n    PROFILE_LOADED,\r\n    CLEAR_CURRENT_PROFILE\r\n} from '../actions/types';\r\n  \r\nconst initialState = {\r\n    profile: null,\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PROFILE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case PROFILE_LOADED:\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                };\r\n        case GET_CURRENT_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.payload,\r\n                loading: false\r\n            };\r\n        case GET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_CURRENT_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    POST_LOADING,\r\n    POST_LOADED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    post: null,\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case POST_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n        };\r\n        case POST_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport profileReducer from './profileReducer';\r\nimport postReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer,\r\n  post: postReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    \r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport PostAddOutlinedIcon from '@material-ui/icons/PostAddOutlined';\r\n\r\nimport { logoutUser } from '../../actions/authActions';\r\nimport { clearCurrentProfile } from '../../actions/profileActions';\r\n\r\nimport InstagramTextLogo from '../../assets/images/instagram-text-logo.jpg';\r\nimport './navbar.css'\r\n\r\nclass Navbar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            matchingUsers: [],\r\n            showSearchInput: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    handleLogout = (e) => {\r\n        e.preventDefault();\r\n        this.props.clearCurrentProfile();\r\n        this.props.logoutUser();\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    handleSearchTermChange = (e) =>{\r\n\r\n        this.setState({\r\n            showSearchInput: true\r\n        });\r\n\r\n        const body = {\r\n            searchTerm: e.target.value\r\n        } \r\n        axios.post('/api/users/search', body)\r\n            .then(res => {\r\n                this.setState({\r\n                    matchingUsers: res.data\r\n                })\r\n            })\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n    handleSearchItemClicked = (user) => {\r\n        this.setState({\r\n            showSearchInput: false\r\n        });\r\n\r\n        $('#searchInput').val('');\r\n\r\n        this.props.history.push(`/profile/${user.username}`);\r\n    }\r\n\r\n    render(){\r\n\r\n        const {user} = this.props.auth;\r\n\r\n        return(    \r\n\r\n            <div className=\"\" style={{marginBottom: \"32px\"}}>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <div className=\"collapse navbar-collapse row\">\r\n\r\n                        <div className=\"col\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">\r\n                                <img src={InstagramTextLogo} alt=\"Instagram Text Logo\" style={{height: \"48px\"}} />\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <form className=\"form-inline\" autoComplete=\"off\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    name=\"searchTerm\" \r\n                                    onChange={this.handleSearchTermChange} \r\n                                    type=\"search\" \r\n                                    id=\"searchInput\" \r\n                                    placeholder=\"Search\" \r\n                                    aria-label=\"Search\"/>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col mr-auto\">\r\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\"><HomeOutlinedIcon /></Link>\r\n                                </li >\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/post/create\"><PostAddOutlinedIcon /></Link>\r\n                                </li >\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`/profile/${user.username}`}><img className=\"rounded-circle\" src={user.avatar} alt=\"avatar\" width=\"22px\" height=\"22px\"/></Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a\r\n                                        className=\"nav-link\" \r\n                                        onClick={this.handleLogout}\r\n                                        style={{cursor: 'pointer'}}><ExitToAppOutlinedIcon /></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>    \r\n\r\n                    </div>\r\n                </nav>\r\n\r\n                {\r\n                    this.state.showSearchInput ?\r\n                    <div className=\"list-group\">\r\n\r\n                        {\r\n                            this.state.matchingUsers.map(user => {\r\n                                return(\r\n                                    <div className=\"list-group-item list-group-item-action py-0 px-2\" key={user.id} onClick={() => this.handleSearchItemClicked(user)} style={{cursor: \"pointer\"}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-3\">\r\n                                                <img className=\"rounded-circle mt-1\" src={user.avatar} alt=\"profile\" width=\"36px\" height=\"36px\"/>\r\n                                            </div>\r\n                                            <div className=\"col-9\">\r\n                                                <small className=\"text-dark\"><b>{user.username}</b></small><br/>\r\n                                                <small className=\"text-dark\">{user.name}</small>\r\n                                            </div>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                    </div>:\r\n                    null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { logoutUser, clearCurrentProfile })(Navbar);","import React, {Component} from 'react';\r\n\r\nimport MoreHorizSharpIcon from '@material-ui/icons/MoreHorizSharp';\r\n\r\nclass PostHeader extends Component {\r\n    render(){\r\n\r\n        const {post} = this.props;\r\n\r\n        return(\r\n            <div className=\"card-header\" style={{backgroundColor: \"white\"}}>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-1\">\r\n                    <img className=\"rounded-circle mt-2\" src={post.user.avatar} alt=\"profile\" width=\"32px\" height=\"32px\"/>\r\n                  </div>\r\n                  <div className=\"col-sm-10\">\r\n                    <small><b>{post.user.username}</b></small> <br/>\r\n                    {\r\n                        post.location ?\r\n                        <small>{post.location}</small> :\r\n                        null\r\n                    }\r\n                  </div>\r\n                  <div className=\"col-sm-1\">\r\n                    <MoreHorizSharpIcon />\r\n                  </div>\r\n                </div>\r\n                  \r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default PostHeader;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport BookmarkBorderSharpIcon from '@material-ui/icons/BookmarkBorderSharp';\r\n//import BookmarkSharpIcon from '@material-ui/icons/BookmarkSharp';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nclass PostFooter extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            likes: [],\r\n            toggleLike: false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        const {likes} = this.props.post;\r\n\r\n        this.setState({\r\n            likes: likes,\r\n            toggleLike: this.findUserLike(likes)\r\n        });\r\n\r\n    }\r\n\r\n    handleLike = (id) => {\r\n        axios.post(`/api/posts/like/${id}`)\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    likes: res.data.likes,\r\n                    toggleLike: !this.state.toggleLike\r\n                })\r\n\r\n            })\r\n            .catch(e => console.log(e.response.data))\r\n    }\r\n\r\n    handleDislike = (id) => {\r\n        axios.post(`/api/posts/unlike/${id}`)\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    likes: res.data.likes,\r\n                    toggleLike: !this.state.toggleLike\r\n                })\r\n\r\n            })\r\n            .catch(e => console.log(e.response.data))\r\n    }\r\n\r\n    findUserLike = (likes) => {\r\n        const {user} = this.props.auth;\r\n        \r\n        if(likes.filter(like => like.user === user.id).length > 0){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n      \r\n    }\r\n\r\n    render(){\r\n\r\n        const {post} = this.props;\r\n        const postDate = moment(post.date).fromNow();\r\n\r\n        return(\r\n            <div className=\"card-footer\" style={{backgroundColor: \"white\"}}>\r\n                <div>\r\n                    <div className=\"float-left\">\r\n                        {\r\n                            this.state.toggleLike ?\r\n                            <FavoriteIcon onClick={() => this.handleDislike(post._id)} className=\"text-danger\" style={{cursor: \"pointer\"}}/> :\r\n                            <FavoriteBorderIcon onClick={() => this.handleLike(post._id)} style={{cursor: \"pointer\"}}/>\r\n                        }\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"float-left ml-3\">\r\n                        <ChatBubbleOutlineIcon />\r\n                    </div>\r\n\r\n                    <div className=\"float-right\">\r\n                        <BookmarkBorderSharpIcon />\r\n                    </div>\r\n                </div>\r\n                \r\n                <br/>\r\n                <small>\r\n                {\r\n                    post.description ?\r\n                    <div>\r\n                        <br/>{post.description}\r\n                    </div>:\r\n                    null\r\n                }\r\n                </small>\r\n\r\n                <br/>\r\n                <small>\r\n                {\r\n                    this.state.likes.length === 1 ?\r\n                    <b>{this.state.likes.length} Like</b>:\r\n                    <b>{this.state.likes.length} Likes</b>\r\n\r\n                }\r\n                </small>\r\n\r\n                <br/>\r\n                <small>\r\n                {\r\n                    post.comments.length === 1 ?\r\n                    <Link to={`/post/${post._id}/comment`}>{post.comments.length} Comment</Link>:\r\n                    <Link to={`/post/${post._id}/comment`}>{post.comments.length} Comments</Link>\r\n\r\n                }\r\n                </small>\r\n                \r\n                <br/>\r\n                <small>{postDate}</small>\r\n                  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n  \r\n  export default connect(mapStateToProps)(PostFooter);","import React, {Component} from 'react';\r\nimport PostHeader from './PostHeader';\r\nimport PostFooter from './PostFooter';\r\n\r\nimport './post.css';\r\n\r\nclass Post extends Component {\r\n\r\n    render(){\r\n\r\n        const {post} = this.props;\r\n        \r\n        return(\r\n\r\n            <div className=\"row\" style={{marginBottom: \"32px\"}}>\r\n                <div className=\"col-md-1\"></div>\r\n                <div className=\"col-md-6\">\r\n\r\n                <div className=\"card\">\r\n\r\n                    <PostHeader post={post}/>\r\n\r\n                    <div className=\"card-body\" style={{padding: \"0\"}}>\r\n                        <img className=\"post-body\" src={post.imageUrl} alt=\"profile\" />\r\n                    </div>\r\n\r\n                    <PostFooter post={post}/>\r\n                </div>\r\n\r\n                </div>\r\n                <div className=\"col-md-5\"></div>\r\n            </div>\r\n      \r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\n\r\nimport spinner from '../../assets/images/spinner.jpg';\r\n\r\nclass Spinner extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <img src={spinner} alt=\"spinner\" width=\"100%\" height=\"100%\"style={{marginTop: \"-96px\"}}></img>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Post from './post/Post';\r\n\r\nimport Spinner from './utils/Spinner';\r\n\r\nclass Homepage extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      posts : []\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    axios.get('/api/posts/')\r\n      .then(res => {\r\n\r\n        this.setState({\r\n          posts: res.data\r\n        })\r\n  \r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"container post-container\">\r\n        {\r\n          this.state.posts.length !== 0 ?\r\n\r\n          this.state.posts.map(post => (\r\n            <Post key={post.id} post={post}/>\r\n          )) :\r\n          <Spinner />\r\n        }\r\n      </div>\t\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Homepage;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    POST_LOADING,\r\n    POST_LOADED\r\n} from '../actions/types';\r\n\r\nexport const createPost = (postData, history) => dispatch => {\r\n\r\n    dispatch(setPostLoading());\r\n\r\n    axios.post('/api/posts/create', postData)\r\n        .then(res => {\r\n            dispatch(setPostLoaded());\r\n            history.push('/')\r\n        })\r\n        .catch(err => {\r\n            dispatch(setPostLoaded());\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        }\r\n        \r\n    );\r\n\r\n}\r\n\r\n\r\n// Post loading\r\nexport const setPostLoading = () => {\r\n    return {\r\n      type: POST_LOADING\r\n    };\r\n};\r\n\r\n// Post loaded\r\nexport const setPostLoaded = () => {\r\n    return {\r\n      type: POST_LOADED\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nimport { createPost } from '../../actions/postActions';\r\n\r\nimport Spinner from '../utils/Spinner';\r\n\r\nclass CreatePost extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            location: '',\r\n            description: '',\r\n            file: {},\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n      }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    readUrl = (e) =>{\r\n        \r\n        if (e.target.files[0]) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                $('#preview')\r\n                    .attr('src', e.target.result)\r\n                    .width(250)\r\n                    .height(200);\r\n            };\r\n\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n\r\n        const file = e.target.files[0];\r\n        \r\n        this.setState({\r\n            file,\r\n            errors: {}\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = new FormData();\r\n        data.append('file', this.state.file);\r\n        data.append('location', this.state.location);\r\n        data.append('description', this.state.description);\r\n\r\n        this.props.createPost(data, this.props.history)\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const errors = this.state.errors;\r\n        const {loading} = this.props.post;\r\n\r\n        let pageContent;\r\n\r\n        if (loading) {\r\n            pageContent = (<Spinner />);\r\n        } \r\n        else{\r\n            pageContent = (\r\n                <div className=\"container\">\r\n                    <div className=\"p-5 mb-5 bg-white\" style={{width: \"40vw\"}}>\r\n\r\n                        <div className=\"form-group mb-5\">\r\n                            <input\r\n                                className={classnames('', {\r\n                                    'is-invalid':errors.imageUrl\r\n                                })}\r\n                                type=\"file\"\r\n                                name=\"file\"\r\n                                onChange={this.readUrl} \r\n                                style={{marginBottom: \"32px\"}}/>\r\n                                \r\n                            {errors.imageUrl ? (<div className=\"invalid-feedback\">{errors.imageUrl}</div>) : null }\r\n                            \r\n                            <br/>\r\n                            <img id=\"preview\" ref=\"preview\" src=\"#\" alt=\"Preview\" />\r\n                        </div>\r\n\r\n                        <form onSubmit={this.onSubmit}>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"webiste\">Location</label>\r\n                                <input\r\n                                    id=\"location\"\r\n                                    type=\"text\" \r\n                                    className=\"form-control\"\r\n                                    name=\"location\"\r\n                                    value={this.state.location}\r\n                                    onChange={this.onChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Description</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChange} />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-3\">Post</button>\r\n                            <Link to=\"/\" className=\"btn btn-outline-danger\">Cancel</Link>\r\n                        </form>\r\n                    </div>\r\n                </div>    \r\n            )\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {pageContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, {createPost})(withRouter(CreatePost));\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport './comments.css';\r\n\r\n\r\nclass Comments extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            post: {},\r\n            comment: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        axios.get(`/api/posts/comments/${params.postId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    post: res.data\r\n                });\r\n            })\r\n            .catch(e => console.log(e.response.data));\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newComment = {\r\n            text: this.state.comment,\r\n        };\r\n\r\n        const { match: { params } } = this.props;\r\n        axios.post(`/api/posts/comment/${params.postId}`, newComment)\r\n            .then(res => {\r\n                this.setState({\r\n                    post: res.data\r\n                });\r\n            })\r\n            .catch(e => console.log(e.response.data));\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {comments} = this.state.post; \r\n\r\n        return(\r\n\r\n            <div className=\"card comment-main\">\r\n\r\n                <div className=\"card-header text-center\">\r\n                    Add a comment\r\n                </div>\r\n\r\n                <div className=\"card-body comment-body p-1\">\r\n                {\r\n                    comments ?\r\n                    comments.map(comment => {\r\n                        return(\r\n                            \r\n                            <div key={comment._id} className=\"row\">\r\n                                <div className=\"col-2 text-center\">\r\n                                    <img className=\"rounded-circle mt-2 ml-2\" src={comment.user.avatar} alt=\"profile\" width=\"24px\" height=\"24px\" />\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <small><b>{comment.user.username}</b> {comment.text}</small><br/>\r\n                                    <small className=\"text-muted\">{moment(comment.date, \"YYYYMMDD\").fromNow()}</small>\r\n                                </div>\r\n                            </div>  \r\n                            \r\n                        )\r\n                    }) :\r\n                    <small>No comments yet</small>\r\n                }\r\n                </div>\r\n\r\n                <div className=\"card-footer text-muted p-0\">\r\n                    <form className=\"form-inline\" onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\" style={{width: \"86%\"}}>\r\n                            <input type=\"textarea\" className=\"form-control form-control-sm\" placeholder=\"Add a comment\" name=\"comment\" style={{width: \"100%\"}} onChange={this.onChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-sm\">Post</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","import React, {Component} from 'react';\r\n\r\nclass ProfilePost extends Component {\r\n\r\n    render(){\r\n\r\n        const {data} = this.props;\r\n\r\n        return(\r\n            <div className=\"col-md-4\" style={{marginBottom: \"32px\"}}>\r\n                <div className=\"thumbnail\">\r\n                    <img src={data.imageUrl} alt={data.username} className=\"img-responsive\" width={\"100%\"} height={\"300px\"}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProfilePost;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ProfileHeader extends Component {\r\n\r\n    render(){\r\n\r\n        const {currentUser} = this.props;\r\n        const {user} = this.props;\r\n        const {profile} = this.props;\r\n       \r\n        return(\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-3 pl-5\">\r\n                    <div>\r\n                        <img className=\"rounded-circle\" src={user.avatar} alt=\"profiles\" width=\"160px\" height=\"160px\"/>\r\n                    </div>\r\n                    </div>\r\n                <div className=\"col-9\">\r\n                    \r\n                    <div className=\"mb-2\">\r\n                        <strong style={{marginRight: \"16px\"}}>{user.username}</strong>\r\n                        {\r\n                            currentUser.id === user._id ?\r\n                            <Link className=\"btn btn-outline-secondary\" to={`/profile/update`}>Edit Profile</Link> :\r\n                            null\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <small style={{marginRight: \"16px\"}}><b>19</b> posts</small>\r\n                        <small style={{marginRight: \"16px\"}}><b>167</b> followers</small>\r\n                        <small><b>402</b> following</small>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <small style={{fontSize: \"1em\"}}>{user.name}</small><br/>\r\n                        \r\n                        {\r\n                            profile.profile.website ? \r\n                            (   \r\n                                <div>\r\n                                    <small style={{fontSize: \"1em\"}}>\r\n                                        <a href={profile.profile.website}>\r\n                                            {profile.profile.website}\r\n                                        </a>\r\n                                    </small><br/>    \r\n                                </div>\r\n                            ): \r\n                            null\r\n                        }\r\n                        {\r\n                            profile.profile.bio ? \r\n                            (\r\n                                <small style={{fontSize: \"1em\"}}>{profile.profile.bio}</small>\r\n                            ): \r\n                            null\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileHeader;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { getUserProfile } from '../../actions/profileActions';\r\n\r\nimport Spinner from '../utils/Spinner';\r\nimport ProfilePost from './ProfilePost';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nclass Profile extends Component {\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        this.props.getUserProfile(params.username);\r\n    }\r\n\r\n    render(){\r\n\r\n        const currentUser = this.props.auth.user;\r\n        const {profile, loading} = this.props.profile;\r\n        \r\n        let pageContent;\r\n\r\n        if (loading || profile === null) {\r\n            pageContent = (<Spinner />);\r\n        } \r\n        else{\r\n            \r\n            pageContent = (\r\n                <div className=\"container\"> \r\n                    \r\n                    <ProfileHeader currentUser={currentUser} user={profile.user} profile={profile}/>\r\n                    <br/><br/>\r\n                    <ul className=\"nav nav-pills\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" to=\"/profile\">POSTS</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/profile\">SAVED</Link>\r\n                    </li>\r\n                    </ul>\r\n                    <br/>\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            profile.posts.length === 0 ?\r\n                            <div>\r\n                                <h1 style={{marginTop: \"32px\"}}>No Posts Yet</h1>\r\n                            </div> :\r\n                            profile.posts.map((post) => \r\n                                <ProfilePost key={post._id} data={post} />\r\n                            )\r\n                        }\r\n                    </div>\r\n                            \r\n                </div>\r\n            )\r\n        }\r\n       \r\n        return(\r\n            <div>\r\n                {pageContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getUserProfile })(Profile);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { \r\n    getCurrentUserProfile, \r\n    updateUserProfile,\r\n    updateUserProfilePicture,\r\n    removeUserProfilePicture\r\n} from '../../actions/profileActions';\r\n\r\nimport Spinner from '../utils/Spinner';\r\n\r\nclass ProfileUpdate extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            username: '',\r\n            website: '',\r\n            bio: '',\r\n            file: {},\r\n            errors: {}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getCurrentUserProfile();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if(!nextProps.profile.loading && nextProps.profile.profile !== null){\r\n            \r\n            const {profile} = nextProps.profile;    \r\n\r\n            this.setState({\r\n                name: profile.user.name,\r\n                username: profile.user.username,\r\n                website: profile.profile.website,\r\n                bio: profile.profile.bio,\r\n            });\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n      }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newProfile = {\r\n            name: this.state.name,\r\n            username: this.state.username,\r\n            website: this.state.website,\r\n            bio: this.state.bio,\r\n        }\r\n\r\n        this.props.updateUserProfile(newProfile, this.props.history);\r\n    \r\n    }\r\n\r\n    setCurrentImage = (e) => {\r\n        let file = e.target.files[0];\r\n        \r\n        this.setState({\r\n            file\r\n        });\r\n        \r\n    }\r\n\r\n    handlePhotoRemoval = (e) => {\r\n        this.props.removeUserProfilePicture(this.props.history);\r\n    }\r\n\r\n    handlePhotoUpload = (e) => {\r\n        let data = new FormData();\r\n        data.append('file', this.state.file);\r\n\r\n        this.props.updateUserProfilePicture(data, this.props.history)\r\n    }\r\n\r\n    render(){\r\n        \r\n        let errors = {};\r\n        if(this.state) errors = this.state.errors;\r\n        \r\n        //const {user} = this.props.auth;\r\n        const {profile, loading} = this.props.profile;\r\n\r\n        let pageContent;\r\n\r\n        if (loading || profile === null) {\r\n            pageContent = (<Spinner />);\r\n        } \r\n        else{\r\n            pageContent = (\r\n                <div className=\"container\">\r\n                    <div className=\"p-5 mb-5 bg-white\" style={{width: \"40vw\"}}>\r\n\r\n                        <div className=\"mb-5\">\r\n                            <img className=\"rounded-circle\" src={profile.user.avatar} alt=\"profiles\" width=\"160px\" height=\"160px\"/>\r\n                            \r\n                            <div className=\"mt-5\">\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                    className={classnames('', {\r\n                                        'is-invalid':errors.imageUrl\r\n                                    })}\r\n                                    type=\"file\"\r\n                                    name=\"file\" \r\n                                    onChange={this.setCurrentImage}/>\r\n\r\n                                    {errors.imageUrl ? (<div className=\"invalid-feedback\">{errors.imageUrl}</div>) : null }\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-primary\" onClick={this.handlePhotoUpload}>Upload</button><br/>\r\n                            \r\n                                <button className=\"btn btn-outline-danger mt-2\" onClick={this.handlePhotoRemoval}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <form onSubmit={this.onSubmit}>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name *</label>\r\n                                <input\r\n                                    id=\"name\"\r\n                                    type=\"text\" \r\n                                    className={classnames('form-control', {\r\n                                        'is-invalid':errors.name\r\n                                    })}\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.onChange} />\r\n\r\n                                {errors.name ? (<div className=\"invalid-feedback\">{errors.name}</div>) : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Username *</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className={classnames('form-control', {\r\n                                    'is-invalid':errors.username\r\n                                    })} \r\n                                    name=\"username\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange} />\r\n\r\n                                    {errors.username ? (<div className=\"invalid-feedback\">{errors.username}</div>) : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"website\">Website</label>\r\n                                <input\r\n                                    id=\"website\"\r\n                                    type=\"text\" \r\n                                    className=\"form-control\"\r\n                                    name=\"website\"\r\n                                    value={this.state.website}\r\n                                    onChange={this.onChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Bio</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"bio\"\r\n                                    value={this.state.bio}\r\n                                    onChange={this.onChange} />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-3\">Save</button>\r\n                            <button type=\"cancel\" className=\"btn btn-outline-danger\">Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {pageContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n  \r\nexport default connect(\r\n    mapStateToProps, {\r\n        getCurrentUserProfile, \r\n        updateUserProfile,\r\n        updateUserProfilePicture,\r\n        removeUserProfilePicture\r\n    })(withRouter(ProfileUpdate));","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { loginUser } from '../../actions/authActions';\r\n\r\nimport InstagramTextLogo from '../../assets/images/instagram-text-logo.jpg';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }\r\n\r\n    this.props.loginUser(user);\r\n    \r\n  }\r\n\r\n  render(){\r\n    const {errors} = this.state;\r\n\r\n    return (\r\n      <div className=\"login-main\">\r\n        \r\n        <div className=\"card login-card\">\r\n          <img src={InstagramTextLogo} className=\"card-img-top\" alt=\"Instagram Text Logo\" />\r\n\r\n          <div className=\"card-body\">\r\n            \r\n            <form onSubmit={this.onSubmit}>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.email\r\n                  })} \r\n                  placeholder=\"Email\" \r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.email ? (<div className=\"invalid-feedback\">{errors.email}</div>) : null }\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"Password\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.password\r\n                  })} \r\n                  placeholder=\"Password\" \r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.password ? (<div className=\"invalid-feedback\">{errors.password}</div>) : null }\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary login-btn\">Log In</button>\r\n            </form>\r\n          \r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"card no-account\">\r\n          <div className=\"card-body\">\r\n            <p>Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import { CLEAR_ERRORS } from './types';\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n      type: CLEAR_ERRORS\r\n    };\r\n  };","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/authActions';\r\n\r\nimport InstagramTextLogo from '../../assets/images/instagram-text-logo.jpg';\r\nimport './register.css';\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      username: '',\r\n      password: '',\r\n      password2: '',\r\n      errors:{}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    }\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n    \r\n  }\r\n\r\n  render(){\r\n    const {errors} = this.state;\r\n    \r\n    return (\r\n      <div className=\"register-main\">\r\n        <div className=\"card register-card\">\r\n\r\n          <img src={InstagramTextLogo} className=\"card-img-top\" alt=\"Instagram Text Logo\" />\r\n          <p className=\"register-heading\">Sign up to see photos and videos<br/>from your friends.</p>\r\n          \r\n          <div className=\"card-body\">\r\n            \r\n            <form onSubmit={this.onSubmit}>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"text\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.name\r\n                  })} \r\n                  placeholder=\"Full Name\" \r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.name ? (<div className=\"invalid-feedback\">{errors.name}</div>) : null }\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"text\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.email\r\n                  })} \r\n                  placeholder=\"Email\" \r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.email ? (<div className=\"invalid-feedback\">{errors.email}</div>) : null }\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"text\"\r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.username\r\n                  })} \r\n                  placeholder=\"Username\" \r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.username ? (<div className=\"invalid-feedback\">{errors.username}</div>) : null }\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"Password\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.password\r\n                  })}  \r\n                  placeholder=\"Password\" \r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.password ? (<div className=\"invalid-feedback\">{errors.password}</div>) : null }\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input \r\n                  type=\"Password\" \r\n                  className={classnames('form-control', {\r\n                    'is-invalid':errors.password2\r\n                  })} \r\n                  placeholder=\"Confirm Password\" \r\n                  name=\"password2\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange} />\r\n\r\n                  {errors.password2 ? (<div className=\"invalid-feedback\">{errors.password2}</div>) : null }\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary register-btn\">Sign Up</button>\r\n            </form>\r\n          \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card have-account\">\r\n          <div className=\"card-body\">\r\n            <p>Have an account? <Link to=\"/login\">Log In</Link></p>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { clearCurrentProfile } from './actions/profileActions';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Navbar from './components/layout/Navbar';\n\nimport Homepage from './components/Homepage';\nimport CreatePost from './components/post/CreatePost';\nimport Comments from './components/post/Comments';\n\nimport Profile from './components/profile/Profile';\nimport ProfileUpdate from './components/profile/ProfileUpdate';\n\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n\nimport './App.css';\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current Profile\n    store.dispatch(clearCurrentProfile());\n    // Redirect to login\n    window.location.href = '/login';\n  }\n\n}\n\nclass App extends Component{\n  render(){\n\n    return (\n      <Provider store={store}>\n        <Router>\n\n            <Switch>\n              <Route exact path=\"/login\" component={Login}></Route>\n              <Route exact path=\"/register\" component={Register}></Route>\n              <Route  path=\"/\" component={Navbar}/>\n            </Switch>\n            \n            <Route exact path=\"/\" component={Homepage}></Route>\n            <Route exact path=\"/post/create\" component={CreatePost}></Route>\n            <Route exact path=\"/post/:postId/comment\" component={Comments}></Route>\n            \n            <Switch>\n              <Route exact path=\"/profile/update\" component={ProfileUpdate}></Route>\n              <Route exact path=\"/profile/:username\" component={Profile}></Route>\n            </Switch>\n            \n        </Router>\n      </Provider>\n    );\n  }\n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}